name: Test Action
on: [push]
env:
  BUILDBEAR_BASE_URL: "https://api.dev.buildbear.io"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Cache Foundry repository
      - name: Cache Foundry repository
        uses: actions/cache@v3
        with:
          path: foundry
          key: ${{ runner.os }}-foundry-${{ hashFiles('**/foundry/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-foundry-

      # Cache build artifacts
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: $HOME/.config/.foundry/bin
          key: ${{ runner.os }}-forge-${{ hashFiles('foundry/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-forge-

      - name: Clone Foundry repository
        run: |
          if [ ! -d "foundry" ]; then
            git clone https://github.com/BuildBearLabs/foundry.git
          fi
        shell: bash

      - name: Build Foundry from source
        run: |
          cd foundry
          cargo build
          mkdir -p $HOME/.config/.foundry/bin
          cp target/debug/forge $HOME/.config/.foundry/bin/
          echo "PATH=$HOME/.config/.foundry/bin:$PATH" >> $GITHUB_ENV
        shell: bash


      - name: Run Forge version
        run: forge --version

      - name: Make bbOut dir
        run: mkdir bbOut
        shell: bash

      - name: Test
        run: forge test

      - name: Test CI with BuildBear
        uses: BuildBearLabs/buildbear_x_action@feat/modify-payload-with-new-api
        with:
          network: |
            [
              {
                "chainId": 1
              }
            ]
          deploy-command: "make exe"
          buildbear-token: "0c035ae5-edb4-4085-829e-4afccbf34272"
